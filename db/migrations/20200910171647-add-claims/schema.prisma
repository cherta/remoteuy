// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model Company {
  id               Int      @default(autoincrement()) @id
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  name             String
  description      String
  logo             String
  url              String   @default("")
  hasOffices       Boolean
  allowsFullRemote Boolean
  claims           Claim[]
  userId           Int?
  user             User?    @relation(fields: [userId], references: [id])
}

model Claim {
  id        Int         @default(autoincrement()) @id
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  companyId Int?
  company   Company?    @relation(fields: [companyId], references: [id])
  userId    Int?
  user      User?       @relation(fields: [userId], references: [id])
  status    ClaimStatus
  info      String?
}

enum ClaimStatus {
  CREATED
  APPROVED
  REJECTED
}

model User {
  id               Int       @default(autoincrement()) @id
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  name             String?
  email            String    @unique
  hashedPassword   String?
  role             String    @default("user")
  sessions         Session[]
  verificationCode String?   @unique
  verified         Boolean   @default(false)
  claims           Claim[]
  companies        Company[]
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}
